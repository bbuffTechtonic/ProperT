{"ast":null,"code":"import _classCallCheck from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/IndivProperty/GoogleMap.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar GoogleMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleMap, _React$Component);\n\n  function GoogleMap(props) {\n    var _this;\n\n    _classCallCheck(this, GoogleMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GoogleMap).call(this, props));\n    _this.state = {\n      myAddress: ''\n    };\n    return _this;\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setMyState();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var address = this.props.address;\n\n      if (prevProps.address !== address) {\n        this.setMyState();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"setMyState\",\n    value: function setMyState() {\n      var address = this.props.address;\n      this.setState({\n        myAddress: this.getAddressURL(address)\n      });\n    }\n  }, {\n    key: \"getAddressURL\",\n    value: function getAddressURL(urlAddress) {\n      this.resAddress = '';\n\n      for (var i = 0; i < urlAddress.length; i += 1) {\n        var res = urlAddress.substr(i, 1);\n\n        if (res === ' ') {\n          this.resAddress = \"\".concat(this.resAddress, \"+\");\n        } else {\n          this.resAddress = this.resAddress + res;\n        }\n      }\n\n      return this.resAddress;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var myAddress = this.state.myAddress;\n      return React.createElement(\"div\", {\n        id: \"google-map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: \"google map\",\n        src: \"https://www.google.com/maps/embed/v1/place?q=\".concat(myAddress, \"&key=AIzaSyArK62E3bpCX94L6N799aAfUUD8wjEOKjg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GoogleMap;\n}(React.Component);\n\nGoogleMap.propTypes = {\n  address: PropTypes.string.isRequired\n}; // Implement anywhere: <GoogleMap address={\"2000 Central Ave, Boulder, CO\"} />\n\nexport default GoogleMap;","map":{"version":3,"sources":["/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/IndivProperty/GoogleMap.jsx"],"names":["React","PropTypes","GoogleMap","props","state","myAddress","setMyState","prevProps","address","setState","getAddressURL","urlAddress","resAddress","i","length","res","substr","Component","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKC,UAAL;AACD;;;uCAEkBC,S,EAAW;AAAA,UACpBC,OADoB,GACR,KAAKL,KADG,CACpBK,OADoB;;AAE5B,UAAID,SAAS,CAACC,OAAV,KAAsBA,OAA1B,EAAmC;AACjC,aAAKF,UAAL;AACD;;AACD,aAAO,IAAP;AACD;;;iCAEY;AAAA,UACHE,OADG,GACS,KAAKL,KADd,CACHK,OADG;AAEX,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,KAAKK,aAAL,CAAmBF,OAAnB;AADC,OAAd;AAGD;;;kCAEaG,U,EAAY;AACxB,WAAKC,UAAL,GAAkB,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC7C,YAAME,GAAG,GAAGJ,UAAU,CAACK,MAAX,CAAkBH,CAAlB,EAAqB,CAArB,CAAZ;;AAEA,YAAIE,GAAG,KAAK,GAAZ,EAAiB;AACf,eAAKH,UAAL,aAAqB,KAAKA,UAA1B;AACD,SAFD,MAEO;AACL,eAAKA,UAAL,GAAkB,KAAKA,UAAL,GAAkBG,GAApC;AACD;AACF;;AACD,aAAO,KAAKH,UAAZ;AACD;;;6BAGQ;AAAA,UACCP,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEP,aACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,GAAG,yDAAkDA,SAAlD,iDAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EApDqBL,KAAK,CAACiB,S;;AAuD9Bf,SAAS,CAACgB,SAAV,GAAsB;AACpBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBC;AADN,CAAtB,C,CAIA;;AACA,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoogleMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myAddress: '',\n    };\n  }\n\n  componentDidMount() {\n    this.setMyState();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { address } = this.props;\n    if (prevProps.address !== address) {\n      this.setMyState();\n    }\n    return null;\n  }\n\n  setMyState() {\n    const { address } = this.props;\n    this.setState({\n      myAddress: this.getAddressURL(address),\n    });\n  }\n\n  getAddressURL(urlAddress) {\n    this.resAddress = '';\n    for (let i = 0; i < urlAddress.length; i += 1) {\n      const res = urlAddress.substr(i, 1);\n\n      if (res === ' ') {\n        this.resAddress = `${this.resAddress}+`;\n      } else {\n        this.resAddress = this.resAddress + res;\n      }\n    }\n    return this.resAddress;\n  }\n\n\n  render() {\n    const { myAddress } = this.state;\n    return (\n      <div id=\"google-map\">\n        <iframe\n          title=\"google map\"\n          src={`https://www.google.com/maps/embed/v1/place?q=${myAddress}&key=AIzaSyArK62E3bpCX94L6N799aAfUUD8wjEOKjg`}\n        />\n      </div>\n    );\n  }\n}\n\nGoogleMap.propTypes = {\n  address: PropTypes.string.isRequired,\n};\n\n// Implement anywhere: <GoogleMap address={\"2000 Central Ave, Boulder, CO\"} />\nexport default GoogleMap;\n"]},"metadata":{},"sourceType":"module"}