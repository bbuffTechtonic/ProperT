{"ast":null,"code":"import _classCallCheck from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/expenses/Expense.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport '../../styles/Expense.css';\n\nvar Expense =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Expense, _Component);\n\n  function Expense(props) {\n    var _this;\n\n    _classCallCheck(this, Expense);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Expense).call(this, props));\n\n    _this.toggleCheck = function (e) {\n      var checkAll = _this.props.checkAll;\n      var onClick = _this.props.onClick;\n      var id = e.currentTarget.dataset.expense;\n      var checked = _this.state.checked;\n\n      if (checkAll) {\n        _this.setState({\n          checked: false\n        });\n      } else {\n        _this.setState({\n          checked: !checked\n        });\n\n        onClick(id);\n      }\n    };\n\n    _this.state = {\n      checked: false\n    };\n    return _this;\n  }\n\n  _createClass(Expense, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var checkAll = this.props.checkAll;\n\n      if (checkAll !== prevProps.checkAll) {\n        if (checkAll) {\n          this.setCheckedFalse();\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"setCheckedFalse\",\n    value: function setCheckedFalse() {\n      this.setState({\n        checked: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checked = this.state.checked;\n      var _this$props = this.props,\n          expense = _this$props.expense,\n          checkAll = _this$props.checkAll; // eslint-disable-next-line object-curly-newline\n\n      var id = expense._id,\n          date = expense.date,\n          description = expense.description,\n          image = expense.image,\n          type = expense.type,\n          amount = expense.amount;\n      var expenseDate = new Date(date.replace(/-/g, '/').replace(/T.+/, ''));\n      var expenseAmount = amount.toFixed(2);\n      var td = '';\n\n      if (type === 'Rent') {\n        td = React.createElement(\"td\", {\n          style: {\n            color: 'black'\n          },\n          className: \"amount text-right col-4 col-sm-2 pr-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"$\".concat(expenseAmount));\n      } else {\n        td = React.createElement(\"td\", {\n          style: {\n            color: 'red'\n          },\n          className: \"amount text-right col-4 col-sm-2 pr-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"$\".concat(expenseAmount));\n      }\n\n      return React.createElement(\"tr\", {\n        id: \"expense-row\",\n        className: \"expense-row row m-0\",\n        key: \"\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"col-1\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        \"data-expense\": id,\n        type: \"checkbox\",\n        checked: checked || checkAll,\n        onChange: this.toggleCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"col-3 col-sm-2\",\n        style: {\n          wordWrap: 'break-word'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\".concat(moment(expenseDate).format('MM/DD'))), React.createElement(\"td\", {\n        className: \"col-sm-3 d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, description), React.createElement(\"td\", {\n        className: \"expense-image col-sm-2 d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"thumbnail\",\n        src: image,\n        alt: \"Receipt\",\n        width: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"category col-4 col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, type), td);\n    }\n  }]);\n\n  return Expense;\n}(Component);\n\nExpense.propTypes = {\n  expense: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  checkAll: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default Expense;","map":{"version":3,"sources":["/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/expenses/Expense.jsx"],"names":["React","Component","moment","PropTypes","Expense","props","toggleCheck","e","checkAll","onClick","id","currentTarget","dataset","expense","checked","state","setState","prevProps","setCheckedFalse","_id","date","description","image","type","amount","expenseDate","Date","replace","expenseAmount","toFixed","td","color","wordWrap","format","propTypes","objectOf","oneOfType","string","number","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport '../../styles/Expense.css';\n\nclass Expense extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { checkAll } = this.props;\n    if (checkAll !== prevProps.checkAll) {\n      if (checkAll) {\n        this.setCheckedFalse();\n      }\n    }\n    return null;\n  }\n\n  setCheckedFalse() {\n    this.setState({ checked: false });\n  }\n\n  toggleCheck = (e) => {\n    const { checkAll } = this.props;\n    const { onClick } = this.props;\n    const id = e.currentTarget.dataset.expense;\n    const { checked } = this.state;\n    if (checkAll) {\n      this.setState({ checked: false });\n    } else {\n      this.setState({ checked: !checked });\n      onClick(id);\n    }\n  }\n\n  render() {\n    const { checked } = this.state;\n    const { expense, checkAll } = this.props;\n    // eslint-disable-next-line object-curly-newline\n    const { _id: id, date, description, image, type, amount } = expense;\n    const expenseDate = new Date(date.replace(/-/g, '/').replace(/T.+/, ''));\n    const expenseAmount = amount.toFixed(2);\n    let td = '';\n    if (type === 'Rent') {\n      td = <td style={{ color: 'black' }} className=\"amount text-right col-4 col-sm-2 pr-3\">{`$${expenseAmount}`}</td>;\n    } else {\n      td = <td style={{ color: 'red' }} className=\"amount text-right col-4 col-sm-2 pr-3\">{`$${expenseAmount}`}</td>;\n    }\n    return (\n      <tr id=\"expense-row\" className=\"expense-row row m-0\" key={`${id}`}>\n        <th className=\"col-1\" scope=\"col\"><input data-expense={id} type=\"checkbox\" checked={checked || checkAll} onChange={this.toggleCheck} /></th>\n        <td className=\"col-3 col-sm-2\" style={{ wordWrap: 'break-word' }}>{`${moment(expenseDate).format('MM/DD')}`}</td>\n        <td className=\"col-sm-3 d-none d-sm-block\">{description}</td>\n        <td className=\"expense-image col-sm-2 d-none d-sm-block\"><img className=\"thumbnail\" src={image} alt=\"Receipt\" width=\"50px\" /></td>\n        <td className=\"category col-4 col-sm-2\">{type}</td>\n        {td}\n      </tr>\n    );\n  }\n}\n\nExpense.propTypes = {\n  expense: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n  checkAll: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Expense;\n"]},"metadata":{},"sourceType":"module"}