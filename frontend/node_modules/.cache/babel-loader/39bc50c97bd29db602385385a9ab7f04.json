{"ast":null,"code":"import _classCallCheck from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/Graph.jsx\";\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable react/no-string-refs */\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.canvasContext = '';\n    _this.bWidth = '';\n    _this.bMargin = '';\n    _this.totalBars = '';\n    _this.maxDataValue = '';\n    _this.bWidthMargin = '';\n    _this.ctr = '';\n    _this.numctr = '';\n    _this.speed = '';\n    _this.totLabelsOnYAxis = '';\n    _this.canvasHeight = '';\n    _this.canvasWidth = '';\n    _this.cWidth = '';\n    _this.cHeight = '';\n    _this.cMargin = '';\n    _this.cSpace = '';\n    _this.cMarginSpace = '';\n    _this.cMarginHeight = '';\n    _this.bWidth = '';\n    _this.bMargin = '';\n    _this.totalBars = '';\n    _this.maxDataValue = '';\n    _this.bWidthMargin = '';\n    _this.ctr = '';\n    _this.numctr = '';\n    _this.speed = '';\n    _this.totLabelsOnYAxis = '';\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var fiscalYearProp = this.props.fiscalYearProp;\n      var canvas = this.refs.canvas;\n      this.canvasContext = canvas.getContext('2d');\n      this.canvasHeight = canvas.height;\n      this.canvasWidth = canvas.width;\n      var fY = fiscalYearProp;\n      this.barChart(fY);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var fiscalYearProp = this.props.fiscalYearProp;\n      var canvas = this.refs.canvas;\n      this.canvasContext = canvas.getContext('2d');\n      this.canvasHeight = canvas.height;\n      this.canvasWidth = canvas.width;\n      var fY = fiscalYearProp;\n      this.barChart(fY);\n    } // barchart constructor\n\n  }, {\n    key: \"barChart\",\n    value: function barChart(year) {\n      var _this2 = this;\n\n      var arrChartData = [];\n      var inc01 = 0;\n      var inc02 = 0;\n      var inc03 = 0;\n      var inc04 = 0;\n      var inc05 = 0;\n      var inc06 = 0;\n      var inc07 = 0;\n      var inc08 = 0;\n      var inc09 = 0;\n      var inc10 = 0;\n      var inc11 = 0;\n      var inc12 = 0;\n      var exp01 = 0;\n      var exp02 = 0;\n      var exp03 = 0;\n      var exp04 = 0;\n      var exp05 = 0;\n      var exp06 = 0;\n      var exp07 = 0;\n      var exp08 = 0;\n      var exp09 = 0;\n      var exp10 = 0;\n      var exp11 = 0;\n      var exp12 = 0;\n      axios.get('http://127.0.0.1:3001/rentals/groupxyear', {\n        headers: {\n          'x-access-token': sessionStorage.getItem('jwt_token')\n        }\n      }).then(function (response) {\n        for (var i = 0; i < response.data.length; i += 1) {\n          if (parseInt(year, 10) === response.data[i]._id.year) {\n            if (response.data[i]._id.type === 'Rent') {\n              switch (response.data[i]._id.month) {\n                case 1:\n                  inc01 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 2:\n                  inc02 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 3:\n                  inc03 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 4:\n                  inc04 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 5:\n                  inc05 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 6:\n                  inc06 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 7:\n                  inc07 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 8:\n                  inc08 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 9:\n                  inc09 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 10:\n                  inc10 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 11:\n                  inc11 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 12:\n                  inc12 += parseInt(response.data[i].total, 10);\n                  break;\n\n                default:\n                  break;\n              }\n            } else {\n              switch (response.data[i]._id.month) {\n                case 1:\n                  exp01 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 2:\n                  exp02 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 3:\n                  exp03 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 4:\n                  exp04 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 5:\n                  exp05 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 6:\n                  exp06 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 7:\n                  exp07 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 8:\n                  exp08 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 9:\n                  exp09 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 10:\n                  exp10 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 11:\n                  exp11 += parseInt(response.data[i].total, 10);\n                  break;\n\n                case 12:\n                  exp12 += parseInt(response.data[i].total, 10);\n                  break;\n\n                default:\n                  break;\n              }\n            }\n          }\n        }\n\n        var janData = {\n          month: 'Jan',\n          exp: exp01,\n          inc: inc01\n        };\n        var febData = {\n          month: 'Feb',\n          exp: exp02,\n          inc: inc02\n        };\n        var marData = {\n          month: 'Mar',\n          exp: exp03,\n          inc: inc03\n        };\n        var aprData = {\n          month: 'Apr',\n          exp: exp04,\n          inc: inc04\n        };\n        var mayData = {\n          month: 'May',\n          exp: exp05,\n          inc: inc05\n        };\n        var junData = {\n          month: 'Jun',\n          exp: exp06,\n          inc: inc06\n        };\n        var julData = {\n          month: 'Jul',\n          exp: exp07,\n          inc: inc07\n        };\n        var augData = {\n          month: 'Aug',\n          exp: exp08,\n          inc: inc08\n        };\n        var sepData = {\n          month: 'Sep',\n          exp: exp09,\n          inc: inc09\n        };\n        var octData = {\n          month: 'Oct',\n          exp: exp10,\n          inc: inc10\n        };\n        var novData = {\n          month: 'Nov',\n          exp: exp11,\n          inc: inc11\n        };\n        var decData = {\n          month: 'Dec',\n          exp: exp12,\n          inc: inc12\n        };\n        arrChartData.push(janData, febData, marData, aprData, mayData, junData, julData, augData, sepData, octData, novData, decData);\n        var arrData = arrChartData;\n\n        _this2.chartSettings(arrData);\n\n        _this2.drawAxisLabelMarkers(arrData);\n\n        _this2.drawChartWithAnimation(arrData); // drawBlueLine(arrData);\n        // drawRedLine(arrData);\n\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    } // initialize the chart and bar values\n\n  }, {\n    key: \"chartSettings\",\n    value: function chartSettings(arrData) {\n      this.canvasContext.clearRect(0, 0, this.canvasWidth, this.canvasHeight); // chart properties\n\n      this.cMargin = 25;\n      this.cSpace = 60;\n      this.cHeight = this.canvasHeight - 2 * this.cMargin - this.cSpace;\n      this.cWidth = this.canvasWidth - 2 * this.cMargin - this.cSpace;\n      this.cMarginSpace = this.cMargin + this.cSpace;\n      this.cMarginHeight = this.cMargin + this.cHeight; // bar properties\n\n      this.bMargin = 15;\n      this.totalBars = arrData.length;\n      this.bWidth = this.cWidth / this.totalBars - this.bMargin; // find maximum value to plot on chart\n\n      this.maxDataValue = 0;\n\n      for (var i = 0; i < this.totalBars; i += 1) {\n        var barVal = parseInt(arrData[i].inc, 10) - parseInt(arrData[i].exp, 10);\n        barVal = Math.abs(barVal);\n\n        if (parseInt(barVal, 10) > parseInt(this.maxDataValue, 10)) {\n          this.maxDataValue = barVal;\n        }\n      }\n\n      this.totLabelsOnYAxis = 10;\n      this.canvasContext.font = '10pt Garamond'; // initialize Animation variables\n\n      this.ctr = 0;\n      this.numctr = 100;\n      this.speed = 10;\n    } // draw chart axis, labels and markers\n\n  }, {\n    key: \"drawAxisLabelMarkers\",\n    value: function drawAxisLabelMarkers(arrData) {\n      this.canvasContext.lineWidth = '2.0'; // draw y axis\n\n      this.drawAxis(this.cMarginSpace, this.cMarginHeight, this.cMarginSpace, this.cMargin); // draw x axis\n\n      this.drawAxis(this.cMarginSpace, this.cMarginHeight, this.cMarginSpace + this.cWidth, this.cMarginHeight);\n      this.canvasContext.lineWidth = '1.0';\n      this.drawMarkers(arrData);\n    } // draw X and Y axis\n\n  }, {\n    key: \"drawAxis\",\n    value: function drawAxis(x, y, X, Y) {\n      this.canvasContext.beginPath();\n      this.canvasContext.moveTo(x, y);\n      this.canvasContext.lineTo(X, Y);\n      this.canvasContext.closePath();\n      this.canvasContext.stroke();\n    } // draw chart markers on X and Y Axis\n\n  }, {\n    key: \"drawMarkers\",\n    value: function drawMarkers(arrData) {\n      var numMarkers = parseInt(this.maxDataValue / this.totLabelsOnYAxis, 10);\n      this.canvasContext.textAlign = 'right';\n      this.canvasContext.fillStyle = '#000'; // Y Axis\n\n      for (var i = 0; i <= this.totLabelsOnYAxis; i += 1) {\n        var markerVal = i * numMarkers;\n        var markerValHt = i * numMarkers * this.cHeight;\n        var xMarkers = this.cMarginSpace - 5;\n        var yMarkers = this.cMarginHeight - markerValHt / this.maxDataValue;\n        this.canvasContext.fillText(markerVal, xMarkers, yMarkers, this.cSpace);\n      } // X Axis\n\n\n      this.canvasContext.textAlign = 'center';\n\n      for (var _i = 0; _i < this.totalBars; _i += 1) {\n        // arrval = arrData[i].split(\",\");\n        var name = arrData[_i].month;\n        var markerXPos = this.cMarginSpace + this.bMargin + _i * (this.bWidth + this.bMargin) + this.bWidth / 2;\n        var markerYPos = this.cMarginHeight + 10;\n        this.canvasContext.fillText(name, markerXPos, markerYPos, this.bWidth);\n      }\n\n      this.canvasContext.save(); // Add Y Axis title\n\n      this.canvasContext.translate(this.cMargin + 10, this.cHeight / 2);\n      this.canvasContext.rotate(Math.PI * -90 / 180);\n      this.canvasContext.fillText('Amount in USD', 0, 0);\n      this.canvasContext.restore(); // Add X Axis Title\n\n      this.canvasContext.fillText('Cash FLow (YTD)', this.cMarginSpace + this.cWidth / 2, this.cMarginHeight + 30);\n    }\n  }, {\n    key: \"drawChartWithAnimation\",\n    value: function drawChartWithAnimation(arrData) {\n      // Loop through the total bars and draw\n      for (var i = 0; i < this.totalBars; i += 1) {\n        var bVal = parseInt(arrData[i].inc, 10) - parseInt(arrData[i].exp, 10); // If Profit draw Green Bar else draws Orange Bar\n\n        if (bVal >= 0) {\n          var bHt = bVal * this.cHeight / this.maxDataValue;\n          var bX = this.cMarginSpace + i * (this.bWidth + this.bMargin) + this.bMargin;\n          var bY = this.cMarginHeight - bHt - 2;\n          this.drawGreenRectangle(bX, bY, this.bWidth, bHt, true);\n        } else {\n          bVal *= -1;\n\n          var _bHt = bVal * this.cHeight / this.maxDataValue;\n\n          var _bX = this.cMarginSpace + i * (this.bWidth + this.bMargin) + this.bMargin;\n\n          var _bY = this.cMarginHeight - _bHt - 2;\n\n          this.drawOrangeRectangle(_bX, _bY, this.bWidth, _bHt, true);\n        }\n      }\n    }\n  }, {\n    key: \"drawGreenRectangle\",\n    value: function drawGreenRectangle(x, y, w, h, fill) {\n      // Draws Green Bars\n      this.canvasContext.beginPath();\n      this.canvasContext.rect(x, y, w, h);\n      this.canvasContext.closePath();\n\n      if (fill) {\n        var gradient = this.canvasContext.createLinearGradient(0, 0, 0, 0);\n        gradient.addColorStop(0, 'seagreen');\n        gradient.addColorStop(1, 'seagreen');\n        this.canvasContext.fillStyle = gradient;\n        this.canvasContext.strokeStyle = gradient;\n        this.canvasContext.fill();\n      }\n\n      this.canvasContext.stroke();\n    }\n  }, {\n    key: \"drawOrangeRectangle\",\n    value: function drawOrangeRectangle(x, y, w, h, fill) {\n      // Draws Orange Bars\n      this.canvasContext.beginPath();\n      this.canvasContext.rect(x, y, w, h);\n      this.canvasContext.closePath();\n\n      if (fill) {\n        var gradient = this.canvasContext.createLinearGradient(0, 0, 0, 0);\n        gradient.addColorStop(0, '#da3e3e');\n        gradient.addColorStop(1, '#da3e3e');\n        this.canvasContext.fillStyle = gradient;\n        this.canvasContext.strokeStyle = gradient;\n        this.canvasContext.fillRect(x, y, w, h); // context.fill();\n      }\n\n      this.canvasContext.stroke();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        width: \"1000px\",\n        height: \"400px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nGraph.propTypes = {\n  fiscalYearProp: PropTypes.number.isRequired\n};\nexport default Graph;","map":{"version":3,"sources":["/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/Graph.jsx"],"names":["React","axios","PropTypes","Graph","props","canvasContext","bWidth","bMargin","totalBars","maxDataValue","bWidthMargin","ctr","numctr","speed","totLabelsOnYAxis","canvasHeight","canvasWidth","cWidth","cHeight","cMargin","cSpace","cMarginSpace","cMarginHeight","fiscalYearProp","canvas","refs","getContext","height","width","fY","barChart","year","arrChartData","inc01","inc02","inc03","inc04","inc05","inc06","inc07","inc08","inc09","inc10","inc11","inc12","exp01","exp02","exp03","exp04","exp05","exp06","exp07","exp08","exp09","exp10","exp11","exp12","get","headers","sessionStorage","getItem","then","response","i","data","length","parseInt","_id","type","month","total","janData","exp","inc","febData","marData","aprData","mayData","junData","julData","augData","sepData","octData","novData","decData","push","arrData","chartSettings","drawAxisLabelMarkers","drawChartWithAnimation","catch","err","console","error","clearRect","barVal","Math","abs","font","lineWidth","drawAxis","drawMarkers","x","y","X","Y","beginPath","moveTo","lineTo","closePath","stroke","numMarkers","textAlign","fillStyle","markerVal","markerValHt","xMarkers","yMarkers","fillText","name","markerXPos","markerYPos","save","translate","rotate","PI","restore","bVal","bHt","bX","bY","drawGreenRectangle","drawOrangeRectangle","w","h","fill","rect","gradient","createLinearGradient","addColorStop","strokeStyle","fillRect","Component","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/no-string-refs */\n/* eslint-disable no-console */\nimport React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasContext = '';\n    this.bWidth = '';\n    this.bMargin = '';\n    this.totalBars = '';\n    this.maxDataValue = '';\n    this.bWidthMargin = '';\n    this.ctr = '';\n    this.numctr = '';\n    this.speed = '';\n    this.totLabelsOnYAxis = '';\n    this.canvasHeight = '';\n    this.canvasWidth = '';\n    this.cWidth = '';\n    this.cHeight = '';\n    this.cMargin = '';\n    this.cSpace = '';\n    this.cMarginSpace = '';\n    this.cMarginHeight = '';\n    this.bWidth = '';\n    this.bMargin = '';\n    this.totalBars = '';\n    this.maxDataValue = '';\n    this.bWidthMargin = '';\n    this.ctr = '';\n    this.numctr = '';\n    this.speed = '';\n    this.totLabelsOnYAxis = '';\n  }\n\n  componentDidMount() {\n    const { fiscalYearProp } = this.props;\n    const { canvas } = this.refs;\n    this.canvasContext = canvas.getContext('2d');\n    this.canvasHeight = canvas.height;\n    this.canvasWidth = canvas.width;\n\n    const fY = fiscalYearProp;\n\n    this.barChart(fY);\n  }\n\n  componentDidUpdate() {\n    const { fiscalYearProp } = this.props;\n    const { canvas } = this.refs;\n    this.canvasContext = canvas.getContext('2d');\n    this.canvasHeight = canvas.height;\n    this.canvasWidth = canvas.width;\n\n    const fY = fiscalYearProp;\n\n    this.barChart(fY);\n  }\n\n  // barchart constructor\n  barChart(year) {\n    const arrChartData = [];\n    let inc01 = 0;\n    let inc02 = 0;\n    let inc03 = 0;\n    let inc04 = 0;\n    let inc05 = 0;\n    let inc06 = 0;\n    let inc07 = 0;\n    let inc08 = 0;\n    let inc09 = 0;\n    let inc10 = 0;\n    let inc11 = 0;\n    let inc12 = 0;\n    let exp01 = 0;\n    let exp02 = 0;\n    let exp03 = 0;\n    let exp04 = 0;\n    let exp05 = 0;\n    let exp06 = 0;\n    let exp07 = 0;\n    let exp08 = 0;\n    let exp09 = 0;\n    let exp10 = 0;\n    let exp11 = 0;\n    let exp12 = 0;\n\n    axios.get('http://127.0.0.1:3001/rentals/groupxyear', {\n      headers: { 'x-access-token': sessionStorage.getItem('jwt_token') },\n    }).then((response) => {\n      for (let i = 0; i < response.data.length; i += 1) {\n        if (parseInt(year, 10) === response.data[i]._id.year) {\n          if (response.data[i]._id.type === 'Rent') {\n            switch (response.data[i]._id.month) {\n              case 1:\n                inc01 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 2:\n                inc02 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 3:\n                inc03 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 4:\n                inc04 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 5:\n                inc05 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 6:\n                inc06 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 7:\n                inc07 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 8:\n                inc08 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 9:\n                inc09 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 10:\n                inc10 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 11:\n                inc11 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 12:\n                inc12 += parseInt(response.data[i].total, 10);\n                break;\n\n              default:\n                break;\n            }\n          } else {\n            switch (response.data[i]._id.month) {\n              case 1:\n                exp01 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 2:\n                exp02 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 3:\n                exp03 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 4:\n                exp04 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 5:\n                exp05 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 6:\n                exp06 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 7:\n                exp07 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 8:\n                exp08 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 9:\n                exp09 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 10:\n                exp10 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 11:\n                exp11 += parseInt(response.data[i].total, 10);\n                break;\n\n              case 12:\n                exp12 += parseInt(response.data[i].total, 10);\n                break;\n\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      const janData = { month: 'Jan', exp: exp01, inc: inc01 };\n      const febData = { month: 'Feb', exp: exp02, inc: inc02 };\n      const marData = { month: 'Mar', exp: exp03, inc: inc03 };\n      const aprData = { month: 'Apr', exp: exp04, inc: inc04 };\n      const mayData = { month: 'May', exp: exp05, inc: inc05 };\n      const junData = { month: 'Jun', exp: exp06, inc: inc06 };\n      const julData = { month: 'Jul', exp: exp07, inc: inc07 };\n      const augData = { month: 'Aug', exp: exp08, inc: inc08 };\n      const sepData = { month: 'Sep', exp: exp09, inc: inc09 };\n      const octData = { month: 'Oct', exp: exp10, inc: inc10 };\n      const novData = { month: 'Nov', exp: exp11, inc: inc11 };\n      const decData = { month: 'Dec', exp: exp12, inc: inc12 };\n\n      arrChartData.push(janData, febData, marData, aprData, mayData,\n        junData, julData, augData, sepData, octData, novData, decData);\n\n\n      const arrData = arrChartData;\n\n      this.chartSettings(arrData);\n      this.drawAxisLabelMarkers(arrData);\n      this.drawChartWithAnimation(arrData);\n\n      // drawBlueLine(arrData);\n      // drawRedLine(arrData);\n    }).catch(err => console.error(err));\n  }\n\n  // initialize the chart and bar values\n  chartSettings(arrData) {\n    this.canvasContext.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n    // chart properties\n    this.cMargin = 25;\n    this.cSpace = 60;\n    this.cHeight = this.canvasHeight - 2 * this.cMargin - this.cSpace;\n    this.cWidth = this.canvasWidth - 2 * this.cMargin - this.cSpace;\n    this.cMarginSpace = this.cMargin + this.cSpace;\n    this.cMarginHeight = this.cMargin + this.cHeight;\n\n    // bar properties\n    this.bMargin = 15;\n    this.totalBars = arrData.length;\n    this.bWidth = (this.cWidth / this.totalBars) - this.bMargin;\n\n    // find maximum value to plot on chart\n    this.maxDataValue = 0;\n    for (let i = 0; i < this.totalBars; i += 1) {\n      let barVal = parseInt(arrData[i].inc, 10) - parseInt(arrData[i].exp, 10);\n      barVal = Math.abs(barVal);\n      if (parseInt(barVal, 10) > parseInt(this.maxDataValue, 10)) {\n        this.maxDataValue = barVal;\n      }\n    }\n\n    this.totLabelsOnYAxis = 10;\n    this.canvasContext.font = '10pt Garamond';\n\n    // initialize Animation variables\n    this.ctr = 0;\n    this.numctr = 100;\n    this.speed = 10;\n  }\n\n  // draw chart axis, labels and markers\n  drawAxisLabelMarkers(arrData) {\n    this.canvasContext.lineWidth = '2.0';\n\n    // draw y axis\n    this.drawAxis(\n      this.cMarginSpace,\n      this.cMarginHeight,\n      this.cMarginSpace,\n      this.cMargin,\n    );\n\n    // draw x axis\n    this.drawAxis(\n      this.cMarginSpace,\n      this.cMarginHeight,\n      this.cMarginSpace + this.cWidth,\n      this.cMarginHeight,\n    );\n\n    this.canvasContext.lineWidth = '1.0';\n\n    this.drawMarkers(arrData);\n  }\n\n  // draw X and Y axis\n  drawAxis(x, y, X, Y) {\n    this.canvasContext.beginPath();\n    this.canvasContext.moveTo(x, y);\n    this.canvasContext.lineTo(X, Y);\n    this.canvasContext.closePath();\n    this.canvasContext.stroke();\n  }\n\n  // draw chart markers on X and Y Axis\n  drawMarkers(arrData) {\n    const numMarkers = parseInt(this.maxDataValue / this.totLabelsOnYAxis, 10);\n    this.canvasContext.textAlign = 'right';\n    this.canvasContext.fillStyle = '#000';\n\n    // Y Axis\n    for (let i = 0; i <= this.totLabelsOnYAxis; i += 1) {\n      const markerVal = i * numMarkers;\n      const markerValHt = i * numMarkers * this.cHeight;\n      const xMarkers = this.cMarginSpace - 5;\n      const yMarkers = this.cMarginHeight - (markerValHt / this.maxDataValue);\n      this.canvasContext.fillText(markerVal, xMarkers, yMarkers, this.cSpace);\n    }\n\n    // X Axis\n    this.canvasContext.textAlign = 'center';\n\n    for (let i = 0; i < this.totalBars; i += 1) {\n      // arrval = arrData[i].split(\",\");\n      const name = arrData[i].month;\n\n      const markerXPos = this.cMarginSpace + this.bMargin\n      + (i * (this.bWidth + this.bMargin)) + (this.bWidth / 2);\n      const markerYPos = this.cMarginHeight + 10;\n\n      this.canvasContext.fillText(name, markerXPos, markerYPos, this.bWidth);\n    }\n\n    this.canvasContext.save();\n\n    // Add Y Axis title\n    this.canvasContext.translate(this.cMargin + 10, this.cHeight / 2);\n    this.canvasContext.rotate(Math.PI * -90 / 180);\n    this.canvasContext.fillText('Amount in USD', 0, 0);\n\n    this.canvasContext.restore();\n\n    // Add X Axis Title\n    this.canvasContext.fillText('Cash FLow (YTD)', this.cMarginSpace + (this.cWidth / 2), this.cMarginHeight + 30);\n  }\n\n  drawChartWithAnimation(arrData) {\n    // Loop through the total bars and draw\n    for (let i = 0; i < this.totalBars; i += 1) {\n      let bVal = parseInt(arrData[i].inc, 10) - parseInt(arrData[i].exp, 10);\n\n      // If Profit draw Green Bar else draws Orange Bar\n      if (bVal >= 0) {\n        const bHt = (bVal * this.cHeight / this.maxDataValue);\n        const bX = this.cMarginSpace + (i * (this.bWidth + this.bMargin)) + this.bMargin;\n        const bY = this.cMarginHeight - bHt - 2;\n        this.drawGreenRectangle(bX, bY, this.bWidth, bHt, true);\n      } else {\n        bVal *= -1;\n        const bHt = (bVal * this.cHeight / this.maxDataValue);\n        const bX = this.cMarginSpace + (i * (this.bWidth + this.bMargin)) + this.bMargin;\n        const bY = this.cMarginHeight - bHt - 2;\n        this.drawOrangeRectangle(bX, bY, this.bWidth, bHt, true);\n      }\n    }\n  }\n\n  drawGreenRectangle(x, y, w, h, fill) {\n    // Draws Green Bars\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(x, y, w, h);\n    this.canvasContext.closePath();\n\n    if (fill) {\n      const gradient = this.canvasContext.createLinearGradient(0, 0, 0, 0);\n      gradient.addColorStop(0, 'seagreen');\n      gradient.addColorStop(1, 'seagreen');\n      this.canvasContext.fillStyle = gradient;\n      this.canvasContext.strokeStyle = gradient;\n      this.canvasContext.fill();\n    }\n\n    this.canvasContext.stroke();\n  }\n\n  drawOrangeRectangle(x, y, w, h, fill) {\n    // Draws Orange Bars\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(x, y, w, h);\n    this.canvasContext.closePath();\n\n    if (fill) {\n      const gradient = this.canvasContext.createLinearGradient(0, 0, 0, 0);\n      gradient.addColorStop(0, '#da3e3e');\n      gradient.addColorStop(1, '#da3e3e');\n      this.canvasContext.fillStyle = gradient;\n      this.canvasContext.strokeStyle = gradient;\n      this.canvasContext.fillRect(x, y, w, h);\n      // context.fill();\n    }\n    this.canvasContext.stroke();\n  }\n\n  render() {\n    return (\n      <div className=\"Graph\">\n        <canvas ref=\"canvas\" width=\"1000px\" height=\"400px\" />\n      </div>\n    );\n  }\n}\n\nGraph.propTypes = {\n  fiscalYearProp: PropTypes.number.isRequired,\n};\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}