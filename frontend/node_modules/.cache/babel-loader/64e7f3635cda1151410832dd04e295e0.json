{"ast":null,"code":"import _regeneratorRuntime from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/billbuff/projects/academy/capstone/ProperT-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/* eslint-disable import/prefer-default-export */\nimport { FETCH_RENTALS, UPDATE_CURRENT_RENTAL } from '../types';\nimport { getData } from '../helpers';\n\nvar fetchRentalsAction = function fetchRentalsAction(rentals) {\n  return {\n    type: FETCH_RENTALS,\n    rentals: rentals\n  };\n};\n\nvar updateCurrentRentalAction = function updateCurrentRentalAction(rental) {\n  return {\n    type: UPDATE_CURRENT_RENTAL,\n    currentRental: rental\n  };\n};\n\nexport var fetchRentals = function fetchRentals() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getData('http://127.0.0.1:3001/rentals/');\n\n              case 2:\n                response = _context.sent;\n                dispatch(fetchRentalsAction(response));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateCurrentRental = function updateCurrentRental() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/billbuff/projects/academy/capstone/ProperT-react/src/store/actions/rentalsActions.js"],"names":["FETCH_RENTALS","UPDATE_CURRENT_RENTAL","getData","fetchRentalsAction","rentals","type","updateCurrentRentalAction","rental","currentRental","fetchRentals","dispatch","response","updateCurrentRental"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,qBAAxB,QAAqD,UAArD;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,OAAO;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAEL,aAD+B;AAErCI,IAAAA,OAAO,EAAPA;AAFqC,GAAL;AAAA,CAAlC;;AAKA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,MAAM;AAAA,SAAK;AAC3CF,IAAAA,IAAI,EAAEJ,qBADqC;AAE3CO,IAAAA,aAAa,EAAED;AAF4B,GAAL;AAAA,CAAxC;;AAKA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACTR,OAAO,CAAC,gCAAD,CADE;;AAAA;AAC1BS,gBAAAA,QAD0B;AAEhCD,gBAAAA,QAAQ,CAACP,kBAAkB,CAACQ,QAAD,CAAnB,CAAR;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAKP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAOF,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { FETCH_RENTALS, UPDATE_CURRENT_RENTAL } from '../types';\nimport { getData } from '../helpers';\n\nconst fetchRentalsAction = rentals => ({\n  type: FETCH_RENTALS,\n  rentals,\n});\n\nconst updateCurrentRentalAction = rental => ({\n  type: UPDATE_CURRENT_RENTAL,\n  currentRental: rental,\n});\n\nexport const fetchRentals = () => async (dispatch) => {\n  const response = await getData('http://127.0.0.1:3001/rentals/');\n  dispatch(fetchRentalsAction(response));\n};\n\nexport const updateCurrentRental = () => async (dispatch) => {\n\n}\n"]},"metadata":{},"sourceType":"module"}