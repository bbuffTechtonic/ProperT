{"ast":null,"code":"var _jsxFileName = \"/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/expenses/TableSelect.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // eslint-disable-next-line object-curly-newline\n\nfunction TableSelect(_ref) {\n  var currentSelection = _ref.currentSelection,\n      options = _ref.options,\n      handleSelection = _ref.handleSelection,\n      selectStyles = _ref.selectStyles;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: handleSelection,\n    defaultValue: currentSelection,\n    className: selectStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, option);\n  })));\n}\n\nTableSelect.propTypes = {\n  currentSelection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  selectStyles: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired\n};\nexport default TableSelect;","map":{"version":3,"sources":["/Users/billbuff/projects/academy/capstone/ProperT-react/src/components/expenses/TableSelect.jsx"],"names":["React","PropTypes","TableSelect","currentSelection","options","handleSelection","selectStyles","map","option","propTypes","oneOfType","number","string","isRequired","arrayOf","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,WAAT,OAAmF;AAAA,MAA5DC,gBAA4D,QAA5DA,gBAA4D;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,MAAjCC,eAAiC,QAAjCA,eAAiC;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AACjF,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAED,eAAlB;AAAmC,IAAA,YAAY,EAAEF,gBAAjD;AAAmE,IAAA,SAAS,EAAEG,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WAChB;AAAQ,MAAA,GAAG,EAAEA,MAAb;AAAqB,MAAA,KAAK,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,MAArC,CADgB;AAAA,GAAlB,CAFJ,CADF,CADF;AAWD;;AAEDN,WAAW,CAACO,SAAZ,GAAwB;AACtBN,EAAAA,gBAAgB,EAAEF,SAAS,CAACS,SAAV,CAAoB,CACpCT,SAAS,CAACU,MAD0B,EAEpCV,SAAS,CAACW,MAF0B,CAApB,EAGfC,UAJmB;AAKtBT,EAAAA,OAAO,EAAEH,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACW,MAAV,CAAiBC,UAAnC,EAA+CA,UALlC;AAMtBP,EAAAA,YAAY,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UANT;AAOtBR,EAAAA,eAAe,EAAEJ,SAAS,CAACc,IAAV,CAAeF;AAPV,CAAxB;AAUA,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line object-curly-newline\nfunction TableSelect({ currentSelection, options, handleSelection, selectStyles }) {\n  return (\n    <React.Fragment>\n      <select onChange={handleSelection} defaultValue={currentSelection} className={selectStyles}>\n        {\n          options.map(option => (\n            <option key={option} value={option}>{option}</option>\n          ))\n        }\n      </select>\n    </React.Fragment>\n  );\n}\n\nTableSelect.propTypes = {\n  currentSelection: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  selectStyles: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired,\n};\n\nexport default TableSelect;\n"]},"metadata":{},"sourceType":"module"}